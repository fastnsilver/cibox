$install_script = <<SCRIPT

  # Provisioning script must be idempotent.

  trap 'exit' ERR

  ##############################################################################
  # Update VM
  ##############################################################################

  yum update -y
  yum upgrade -y

  DOCKER_OPTS="-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock --net=host"
  systemctl restart docker.service

SCRIPT


Vagrant.configure("2") do |config|
  config.vm.box = ENV['TEMPLATE']
  config.vm.hostname = "factory"

  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  config.vm.provision "shell" do |s|
    s.inline = $install_script
  end

  # Synced folders
  # See https://docs.vagrantup.com/v2/synced-folders/basic_usage.html
  config.vm.synced_folder "containers", "/opt/containers"

  # Docker
  # @see https://docs.vagrantup.com/v2/provisioning/docker.html
  config.vm.provision "docker" do |d|
    d.build_image "/opt/containers/base", args: "--rm=true -t fans/factory-base"
    d.run "fans/factory-base", args: "-p 2000:22"
    d.build_image "/opt/containers/oraclejdk7", args: "--rm=true -t fans/oraclejdk7"
    d.run "fans/oraclejdk7"
    d.build_image "/opt/containers/postgresql94", args: "--rm=true -t fans/postgresql94"
    d.run "fans/postgresql94", args: "-p 5432:5432"
    d.build_image "/opt/containers/atlassian", args: "--rm=true -t fans/atlassian"
    d.run "fans/atlassian", cmd: "/usr/local/share/atlassian/initialise_db.sh"
    d.build_image "/opt/containers/nginx", args: "--rm=true -t fans/nginx"
    d.run "fans/nginx", args: "-p 80:80"
    d.build_image "/opt/containers/jenkins", args: "--rm=true -t fans/jenkins"
    d.run "fans/jenkins", args: "-p 8080:8080"
    d.build_image "/opt/containers/go-server", args: "--rm=true -t fans/go-server"
    d.run "fans/go-server", args: "-p 8153:8153"
    d.build_image "/opt/containers/go-agent", args: "--rm=true -t fans/go-agent"
    d.run "fans/go-agent", args: "-e SERVER_PORT_8153_TCP_ADDR=localhost -e SERVER_PORT_8153_TCP_PORT=8153"
    d.build_image "/opt/containers/stash", args: "--rm=true -t fans/stash"
    d.run "fans/stash", args: "-p 7990:7990 --link fans-atlassian:db"
    d.build_image "/opt/containers/jira", args: "--rm=true -t fans/jira"
    d.run "fans/jira", args: "-p 9080:9080 --link fans-atlassian:db --link fans-stash:stash"
    d.build_image "/opt/containers/docker-registry", args: "--rm=true -t fans/docker-registry"
    d.run "fans/docker-registry", args: "-p 5000:5000"
  end

  # Ports
  config.vm.network "forwarded_port", guest: 2000, host: 2000   # factory (base)
  config.vm.network "forwarded_port", guest: 4243, host: 4243   # docker
  config.vm.network "forwarded_port", host: 5000, guest: 5000   # docker-registry
  config.vm.network "forwarded_port", guest: 5432, host: 5432   # postgresql
  config.vm.network "forwarded_port", guest: 7990, host: 7990   # stash
  config.vm.network "forwarded_port", guest: 80, host: 8000     # nginx
  config.vm.network "forwarded_port", guest: 8080, host: 8080   # jenkins
  config.vm.network "forwarded_port", guest: 8153, host: 8153   # go-server
  config.vm.network "forwarded_port", guest: 9080, host: 9080   # jira
end
