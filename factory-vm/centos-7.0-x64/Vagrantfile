$install_script = <<SCRIPT

  # Provisioning script must be idempotent.

  trap 'exit' ERR

  ##############################################################################
  # Update VM
  ##############################################################################

  yum update -y
  yum upgrade -y


  ##############################################################################
  # Install debootstrap for building Docker base containers
  ##############################################################################

  yum install -y debootstrap


  ##############################################################################
  # Install Docker
  ##############################################################################

  # Install docker
  yum install -y docker-io

  # Make docker start up on boot
  systemctl enable docker.service

  echo -e 'DOCKER_OPTS="-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock"\n' > /etc/default/docker
  
  # Start docker
  systemctl start docker.service

  # Status
  systemctl status docker.service

  # Add user to the docker group
  usermod -a -G docker vagrant


  RUBY_VERSION=2.1.2
  ##############################################################################
  # Install Ruby $RUBY_VERSION for development
  ##############################################################################

  if [ ! -f /usr/local/rvm/bin/rvm ]; then
    curl -sSL https://get.rvm.io | sudo bash
  fi
  if [ ! -d /usr/local/rvm/rubies/ruby-$RUBY_VERSION ]; then
    /usr/local/rvm/bin/rvm install ruby-$RUBY_VERSION
  fi
  /usr/local/rvm/bin/rvm alias create default ruby-$RUBY_VERSION

  # Add user to the rvm group
  usermod -a -G rvm vagrant


SCRIPT


Vagrant.configure("2") do |config|

  config.vm.hostname = "factory"

  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  config.vm.provision "shell" do |s|
    s.inline = $install_script
  end

  config.vm.provider "virtualbox" do |vbox|
    vbox.vm.box = "centos-7.0-x64_virtualbox"
    vbox.vm.box_url = "../../base-vm/centos-7.0-x64/centos-7.0-x64_virtualbox.box"
    vbox.memory = 4096
  end

  config.vm.provider "vmware_fusion" do |vmwf|
    vmwf.vm.box = "centos-7.0-x64_vmware"
    vmwf.vm.box_url = "../../base-vm/centos-7.0-x64/centos-7.0-x64_vmware.box"
    vmwf.memory = 4096
  end

  config.vm.provider "vmware_workstation" do |vmww|
    vmww.vm.box = "centos-7.0-x64_vmware"
    vmww.vm.box_url = "../../base-vm/centos-7.0-x64/centos-7.0-x64_vmware.box"
    vmww.memory = 4096
  end

  # Synced folders
  # See https://docs.vagrantup.com/v2/synced-folders/basic_usage.html
  config.vm.synced_folder "containers", "/opt/containers"

  # Docker
  # @see https://docs.vagrantup.com/v2/provisioning/docker.html
  config.vm.provision "docker" do |d|
    ## d.build_image "/vagrant/app"
    ## d.run
  end

  # Ports
  config.vm.network "forwarded_port", guest: 2000, host: 2000   # factory (base)
  config.vm.network "forwarded_port", guest: 4243, host: 4243   # docker
  config.vm.network "forwarded_port", host: 5000, guest: 5000   # docker-registry
  config.vm.network "forwarded_port", guest: 5432, host: 5432   # postgresql
  config.vm.network "forwarded_port", guest: 7990, host: 7990   # stash
  config.vm.network "forwarded_port", guest: 80, host: 8000     # nginx
  config.vm.network "forwarded_port", guest: 8080, host: 8080   # jenkins
  config.vm.network "forwarded_port", guest: 8153, host: 8153   # go-server
  config.vm.network "forwarded_port", guest: 9080, host: 9080   # jira
end
